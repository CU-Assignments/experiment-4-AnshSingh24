import java.util.*;
class TicketBookingSystem
{
    private final int totalSeats;
    private final boolean[] seats;
    public TicketBookingSystem(int totalSeats)
    {
        this.totalSeats=totalSeats;
        this.seats=new boolean[totalSeats];
    }
    public synchronized boolean bookSeat(int seatNumber,String passengerName)
    {
        if(seatNumber<0||seatNumber>=totalSeats)
        {
            System.out.println(passengerName+"attempted to book an invalid seat.");
            return false;
        }
        if(!seats[seatNumber])
        {
            seats[seatNumber]=true;
            System.out.println(passengerName+" successfully booked seat Number "+seatNumber);
            return true;
        }
        else
        {
            System.out.println(passengerName+"\tattmepted to book an already booked seat.");
            return false;
        }
    }
}

class Passenger extends Thread
{
    private final TicketBookingSystem system;
    private final int seatNumber;
    private final String passengerName;
    public Passenger(TicketBookingSystem system,int seatNumber,String passengerName,int priority)
    {
        this.system=system;
        this.seatNumber=seatNumber;
        this.passengerName=passengerName;
        setPriority(priority);
    }
    @Override
    public void run()
    {
        system.bookSeat(seatNumber,passengerName);
    }
}

import java.util.*;
public class TicketBookingApp
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter total number of seats: ");
        int totalSeats=sc.nextInt();
        TicketBookingSystem BS=new TicketBookingSystem(totalSeats);
        List<Passenger> passengers=new ArrayList<>();
        System.out.print("Enter number of passengers: ");
        int numPassengers=sc.nextInt();
        sc.nextLine();
        for(int i=0;i<numPassengers;i++)
        {
            System.out.print("Enter passenger name: ");
            String name=sc.nextLine();
            System.out.print("Enter Seat Number: ");
            int seat=sc.nextInt();
            System.out.print("Enter Priority(1-10,10 is highest): ");
            int priority=sc.nextInt();
            sc.nextLine();
            passengers.add(new Passenger(BS,seat,name,priority));
        }
        Collections.shuffle(passengers);
        for(Passenger p:passengers)
        {
            p.start();
        }
        for(Passenger p:passengers)
        {
            try
            {
                p.join();
            }
            catch(InterruptedException e)
            {
                e.printStackTrace();
            }
        }
        sc.close();
    }
}
